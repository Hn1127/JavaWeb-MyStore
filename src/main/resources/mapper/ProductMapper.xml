<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pers.MyStore.mapper.ProductMapper">

	<select id="findAll"
		resultType="com.pers.MyStore.entity.Product">
		SELECT * FROM product
	</select>
	
	<select id="findAllLimit"
		resultType="com.pers.MyStore.entity.Product">
		SELECT * FROM product Limit #{num}
	</select>
	
	<select id="findAllValid"
		resultType="com.pers.MyStore.entity.Product">
		SELECT * FROM product where product_valid = true;
	</select>
	
	<select id="findAllLimitValid"
		resultType="com.pers.MyStore.entity.Product">
		SELECT * FROM product where product_valid = true Limit #{num};
	</select>

	<select id="findProductById"
		resultType="com.pers.MyStore.entity.Product">
		select product.*,product_type.real_type
		from product left join product_type on product.product_type=product_type.product_type
		where product_id=#{product_id}
	</select>
	
	<select id="productCount">
		select COUNT(*)
		from product;
	</select>
	
	<select id="validProductCount">
		select COUNT(*)
		from product where product_valid=1;
	</select>

	<select id="findByMutiConditions"
		resultType="com.pers.MyStore.entity.Product">
		select * from product
		<where>
			<if test="productId != null and productId != ''">
				and product_id=#{productId}
			</if>
			<if test="productName != null and productName != ''">
				and product_name like '%${productName}%'
			</if>
			<if test="productType != null">
				and product_type=#{productType}
			</if>
			<if test="productPriceLowerBound != null">
				and product_price &gt;= #{productPriceLowerBound}
			</if>
			<if test="productPriceUpperBound != null">
				and product_price &lt;= #{productPriceUpperBound}
			</if>
			<if test="productInventoryLowerBound != null">
				and product_inventory &gt;= #{productInventoryLowerBound}
			</if>
			<if test="productInventoryUpperBound != null">
				and product_inventory &lt;= #{productInventoryUpperBound}
			</if>
			<if test="productValid != null">
				and product_valid = #{productValid}
			</if>
		</where>
	</select>
	
	<select id="findBySearch"
		resultType="com.pers.MyStore.entity.Product">
		select * from product
		where product.product_name like '%${searchCondition}%';
	</select>
	
	<select id="findBySearchValid"
		resultType="com.pers.MyStore.entity.Product">
		select * from product
		where product.product_name like '%${searchCondition}%' and product_valid=true;
	</select>
	
	<select id="findByType"
		resultType="com.pers.MyStore.entity.Product">
		select * from product
		where product_type=${type};
	</select>
	
	<select id="findByTypeValid"
		resultType="com.pers.MyStore.entity.Product">
		select * from product
		where product_type=${type} and product_valid=1;
	</select>

	<update id="updateProduct">
		update product
		set
		product_name=#{product_name},product_description=#{product_description},product_price=#{product_price}
		,product_type=#{product_type},product_inventory=#{product_inventory}
		where
		product_id=#{product_id}
	</update>
	
	<update id="changeProductValid">
		update product
		set
		product_valid=NOT product_valid
		where
		product_id=#{product_id}
	</update>
	
	<update id="buyProduct">
		update product
		set
		product_inventory=product_inventory-#{quantity}
		where
		product_id=#{product_id}
	</update>

	<insert id="addProduct" useGeneratedKeys="true" keyProperty="id">
		insert into
		product(product_id,product_name,product_description,product_price,product_type,product_inventory)
		values
		(#{product_id},#{product_name},#{product_description},#{product_price},#{product_type},#{product_inventory})
	</insert>

</mapper>